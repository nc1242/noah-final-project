<div id="graph" class="fullscreen background parallax">
	<script src="/javascripts/d3.min.js"></script>
	<script>

	var margin = {top: 20, right: 20, bottom: 30, left: 50},
	width = 960 - margin.left - margin.right,
	height = 500 - margin.top - margin.bottom;

	var parseDate = d3.time.format("%d-%b-%y").parse;

	var x = d3.time.scale()
	.range([0, width]);

	var y = d3.scale.linear()
	.range([height, 0]);

	var xAxis = d3.svg.axis()
	.scale(x)
	.orient("bottom");

	var yAxis = d3.svg.axis()
	.scale(y)
	.orient("left");

	var line = d3.svg.line()
	.x(function(d) { return x(d.date); })
	.y(function(d) { return y(d.close); });



	var svg = d3.select("#graph").append("svg")
	svg.attr("width", width + margin.left + margin.right)
	svg.attr("height", height + margin.top + margin.bottom)
	//.attr("width", 80%)
	//svg.attr("height", 100%)
	//svg.attr("class", 'sixteen columns')
	.append("g")
	.attr("transform", "translate(" + margin.left + "," + margin.top + ")");



	d3.tsv("/data.tsv", function(error, data) {
	//d3.json({{tuple}}, function(error, data) {
		if (error) throw error;

		data.forEach(function(d) {
			d.date = parseDate(d.date);
			d.close = +d.close;
		});

		x.domain(d3.extent(data, function(d) { return d.date; }));
		y.domain(d3.extent(data, function(d) { return d.close; }));

		svg.append("g")
		.attr("class", "x axis")
		.attr("transform", "translate(0," + height + ")")
		.call(xAxis);

		svg.append("g")
		.attr("class", "y axis")
		.call(yAxis)
		.append("text")
		.attr("transform", "rotate(-90)")
		.attr("y", 6)
		.attr("dy", ".71em")
		.style("text-anchor", "end")
		.text("Price ($)");

		svg.append("path")
		.datum(data)
		.attr("class", "line")
		.attr("d", line);
	});
/*
http://stackoverflow.com/questions/17622936/render-d3-graph-from-a-string-of-json-instead-of-a-json-file
http://stackoverflow.com/questions/10549585/d3-js-json-simple-sample-code
https://github.com/mbostock/d3/wiki/Selections#data
http://alignedleft.com/tutorials/d3/binding-data/
*/
	</script>
</div>