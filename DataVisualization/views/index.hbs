<!--
<h2>Home</h2>

-->


<!--
Created using JS Bin
http://jsbin.com

Copyright (c) 2015 by anonymous (http://jsbin.com/hekoxabaye/1/edit)

Released under the MIT license: http://jsbin.mit-license.org
-->
<head>
	<meta charset="utf-8">
	<title>Parallax backgrounds with centered content</title>
	<meta name="description" content="Parallax backgrounds with centered content">
	<style id="jsbin-css">

	</style>
</head>

<div class="fullscreen background parallax" style="background-image:url('/images/graph1.png');" data-img-width="1600" data-img-height="1064" data-diff="100">
	<div class="content-a">
		<div class="content-b">
			<h1 id="title">Data Visualization<h1>
			</div>
		</div>
	</div>

	<div class="thin " style="background-color:#ffffff;">
	</div>

	<div class="fullscreen background parallax" style="background-image:url('/images/graph2.png');" data-img-width="1600" data-img-height="1064" data-diff="100" data-oriz-pos="100%">
		<div class="content-a">
			<div class="content-b">
				{{#if user}}
				<h1 class="notBlue">Welcome {{user.username}}</h1></br>
				<a href="/graph"><h3>View Sales Report </h3></a>
				{{else}}
				<a href="register">Register</a><h3>or</h3><a href="login">Login</a> 
				{{/if}}  
			</div>
		</div>
	</div>
	{{#if user}}
  

	<div>

		<div class="thin" style="background-color:#00B7FF;">
		</div>

	</div>
	<div class="fullscreen background parallax" style="background-color:#b3e6ff;" data-img-width="1600" data-img-height="1064" data-diff="100" data-oriz-pos="100%">
		<div class="content-a">
			<div class="content-b">
				<center>
					<div class="container">
						<div class="sixteen columns">
							<div class="eight columns offset by alpha">
<!--
								<div class="fullscreen background parallax">
											<h1 id="title">Data Visualization<h1>
								</div>
-->
								<div class = "circle eight columns offset-by-seven alpha beta gamma" style="background-color:#ffffff">
									<a href="data"><div class="content-b">data</div></a>
								</div>
								<div class = "circle eight columns offset-by-seven alpha beta gamma" style="background-color:#ffffff">
									<a href="input">add Report</a>
								</div>
							</div>
							<div class=" eight columns alpha">	
								<div class = "circle eight columns offset-by-seven alpha beta gamma" style="background-color:#ffffff">
									<a href="graph">graph</a>
								</div>
								<div class = "circle eight columns offset-by-seven alpha beta gamma" style="background-color:#ffffff">
									<a href="logout">logout</a>
								</div>
							</div>
						</div>
					</div>
					</center>
					</div>
				</div>
			</div>
	{{/if}}
			<!-- include jQuery -->
			<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>

			<script id="jsbin-javascript">
			/* detect touch */
			if("ontouchstart" in window){
				document.documentElement.className = document.documentElement.className + " touch";
			}
			if(!$("html").hasClass("touch")){
				/* background fix */
				$(".parallax").css("background-attachment", "fixed");
			}

/* fix vertical when not overflow
call fullscreenFix() if .fullscreen content changes */
function fullscreenFix(){
	var h = $('body').height();
    // set .fullscreen height
    $(".content-b").each(function(i){
    	if($(this).innerHeight() > h){ $(this).closest(".fullscreen").addClass("overflow");
    }
});
}
$(window).resize(fullscreenFix);
fullscreenFix();

/* resize background images */
function backgroundResize(){
	var windowH = $(window).height();
	$(".background").each(function(i){
		var path = $(this);
        // variables
        var contW = path.width();
        var contH = path.height();
        var imgW = path.attr("data-img-width");
        var imgH = path.attr("data-img-height");
        var ratio = imgW / imgH;
        // overflowing difference
        var diff = parseFloat(path.attr("data-diff"));
        diff = diff ? diff : 0;
        // remaining height to have fullscreen image only on parallax
        var remainingH = 0;
        if(path.hasClass("parallax") && !$("html").hasClass("touch")){
        	var maxH = contH > windowH ? contH : windowH;
        	remainingH = windowH - contH;
        }
        // set img values depending on cont
        imgH = contH + remainingH + diff;
        imgW = imgH * ratio;
        // fix when too large
        if(contW > imgW){
        	imgW = contW;
        	imgH = imgW / ratio;
        }
        //
        path.data("resized-imgW", imgW);
        path.data("resized-imgH", imgH);
        path.css("background-size", imgW + "px " + imgH + "px");
    });
}
$(window).resize(backgroundResize);
$(window).focus(backgroundResize);
backgroundResize();

/* set parallax background-position */
function parallaxPosition(e){
	var heightWindow = $(window).height();
	var topWindow = $(window).scrollTop();
	var bottomWindow = topWindow + heightWindow;
	var currentWindow = (topWindow + bottomWindow) / 2;
	$(".parallax").each(function(i){
		var path = $(this);
		var height = path.height();
		var top = path.offset().top;
		var bottom = top + height;
        // only when in range
        if(bottomWindow > top && topWindow < bottom){
        	var imgW = path.data("resized-imgW");
        	var imgH = path.data("resized-imgH");
            // min when image touch top of window
            var min = 0;
            // max when image touch bottom of window
            var max = - imgH + heightWindow;
            // overflow changes parallax
            var overflowH = height < heightWindow ? imgH - height : imgH - heightWindow; // fix height on overflow
            top = top - overflowH;
            bottom = bottom + overflowH;
            // value with linear interpolation
            var value = min + (max - min) * (currentWindow - top) / (bottom - top);
            // set background-position
            var orizontalPosition = path.attr("data-oriz-pos");
            orizontalPosition = orizontalPosition ? orizontalPosition : "50%";
            $(this).css("background-position", orizontalPosition + " " + value + "px");
        }
    });
}
if(!$("html").hasClass("touch")){
	$(window).resize(parallaxPosition);
    //$(window).focus(parallaxPosition);
    $(window).scroll(parallaxPosition);
    parallaxPosition();
}


</script>


